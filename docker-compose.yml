services:
  order-api:
    build:
      context: order
      dockerfile: Dockerfile.api
    volumes:
      - ./order:/code/
    depends_on:
      - order-db
      - product-workers
      - accounting-workers
      - order-workers
    ports:
      - "80:80"
    environment:
      ORDER_DB_CONNECTION: ${ORDER_DB_CONNECTION}
      RABBITMQ_CONNECTION: ${RABBITMQ_CONNECTION}
      REDIS_CONNECTION: ${REDIS_CONNECTION}


  order-workers:
    build:
      context: order
      dockerfile: Dockerfile.workers
    volumes:
      - ./order:/code/
    depends_on:
      - redis
      - rabbitmq
    environment:
      ORDER_DB_CONNECTION: ${ORDER_DB_CONNECTION}
      RABBITMQ_CONNECTION: ${RABBITMQ_CONNECTION}
      REDIS_CONNECTION: ${REDIS_CONNECTION}

  order-db:
    restart: always
    build:
      context: order
      dockerfile: Dockerfile.db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: order_db
    ports:
      - "5432:5432"

  product-workers:
    build:
      context: product
    volumes:
        - ./product:/code/
    environment:
      RABBITMQ_CONNECTION: ${RABBITMQ_CONNECTION}
      REDIS_CONNECTION: ${REDIS_CONNECTION}
    depends_on:
        - redis
        - rabbitmq

  accounting-workers:
    build:
      context: accounting
    volumes:
      - ./accounting:/code/
    environment:
      RABBITMQ_CONNECTION: ${RABBITMQ_CONNECTION}
      REDIS_CONNECTION: ${REDIS_CONNECTION}
    depends_on:
        - redis
        - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
  redis:
    image: redis:latest
    ports:
      - "6379:6379"

